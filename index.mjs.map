{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport log1p from '@stdlib/math-base-special-log1p';\n\n\n// MAIN //\n\n/**\n* Evaluates the probability density function (PDF) for a Bradford distribution with shape parameter `c` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} c - shape parameter\n* @returns {Probability} evaluated PDF\n*\n* @example\n* var v = pdf( 0.1, 0.1 );\n* // returns ~1.039\n*\n* @example\n* var v = pdf( 0.5, 5.0 );\n* // returns ~0.797\n*\n* @example\n* var v = pdf( 1.0, 10.0 );\n* // returns ~0.379\n*\n* @example\n* var v = pdf( 2.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var v = pdf( -1.0, 0.5 );\n* // returns 0.0\n*\n* @example\n* var v = pdf( 0.5, 0.0 );\n* // returns NaN\n*\n* @example\n* var v = pdf( 0.5, -5.0 );\n* // returns NaN\n*\n* @example\n* var v = pdf( NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var v = pdf( 1.0, NaN );\n* // returns NaN\n*/\nfunction pdf( x, c ) {\n\tvar k;\n\tif ( isnan( c ) || isnan( x ) || c <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( x < 0.0 || x > 1.0 ) {\n\t\treturn 0.0;\n\t}\n\tk = log1p( c );\n\treturn c / ( ( 1.0 + ( c*x ) ) * k );\n}\n\n\n// EXPORTS //\n\nexport default pdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport log1p from '@stdlib/math-base-special-log1p';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the probability density function (PDF) for a Bradford distribution with shape parameter `c`.\n*\n* @param {PositiveNumber} c - shape parameter\n* @returns {Function} PDF\n*\n* @example\n* var pdf = factory( 5.0 );\n* var y = pdf( 0.5 );\n* // returns ~0.797\n*\n* y = pdf( 1.0 );\n* // returns ~0.465\n*/\nfunction factory( c ) {\n\tvar k;\n\tif ( isnan( c ) || c <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tk = log1p( c );\n\treturn pdf;\n\n\t/**\n\t* Evaluates the probability density function (PDF) for a Bradford distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {Probability} evaluated PDF\n\t*\n\t* @example\n\t* var y = pdf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction pdf( x ) {\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x < 0.0 || x > 1.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\treturn c / ( ( 1.0 + ( c*x ) ) * k );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Bradford distribution probability density function (PDF).\n*\n* @module @stdlib/stats-base-dists-bradford-pdf\n*\n* @example\n* import pdf from '@stdlib/stats-base-dists-bradford-pdf';\n*\n* var y = pdf( 0.5, 5.0 );\n* // returns ~0.797\n*\n* var myPDF = pdf.factory( 5.0 );\n* y = myPDF( 0.5 );\n* // returns ~0.797\n*\n* y = myPDF( 1.0 );\n* // returns ~0.465\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["pdf","x","c","isnan","NaN","log1p","factory","k","constantFunction","setReadOnly","main"],"mappings":";;8ZAuEA,SAASA,EAAKC,EAAGC,GAEhB,OAAKC,EAAOD,IAAOC,EAAOF,IAAOC,GAAK,EAC9BE,IAEHH,EAAI,GAAOA,EAAI,EACZ,EAGDC,IAAQ,EAAQA,EAAED,GADrBI,EAAOH,GAEZ,CCtCA,SAASI,EAASJ,GACjB,IAAIK,EACJ,OAAKJ,EAAOD,IAAOA,GAAK,EAChBM,EAAkBJ,MAE1BG,EAAIF,EAAOH,GAcX,SAAcD,GACb,GAAKE,EAAOF,GACX,OAAOG,IAER,GAAKH,EAAI,GAAOA,EAAI,EACnB,OAAO,EAER,OAAOC,IAAQ,EAAQA,EAAED,GAAQM,EACjC,EACF,CCvBAE,EAAAC,EAAA,UAAAJ"}